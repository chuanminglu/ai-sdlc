# AI-SDLC 项目指令文件
# 此文件定义了项目的开发环境要求和运行配置

# 项目基本信息
PROJECT_NAME="AI-SDLC"
PROJECT_VERSION="1.0.0"
PROJECT_TYPE="python"

# 虚拟环境配置 - 强制要求
VIRTUAL_ENV_REQUIRED=true
VIRTUAL_ENV_PATH="venv"
PYTHON_VERSION="3.12"

# Agent模式配置
AGENT_MODE=true
TERMINAL_REUSE=true
TERMINAL_PERSISTENT=true
MAX_TERMINALS=1

# 开发环境配置
ENVIRONMENT="development"
DEBUG_MODE=true
LOG_LEVEL="INFO"

# 项目依赖
REQUIREMENTS_FILE="requirements.txt"
INSTALL_REQUIREMENTS_ON_SETUP=true

# 项目启动脚本
MAIN_MODULE="mainui.py"
MAIN_MENU_MODULE="mainmenu_gui.py"

# 工作目录
WORKING_DIRECTORY="d:\Programs\ai-sdlc"

# 环境变量
export PYTHONPATH="${WORKING_DIRECTORY}:$PYTHONPATH"
export PYTHON_ENV="venv"

# 验证命令
VERIFY_VENV_CMD="python -c \"import sys; print('虚拟环境:', sys.prefix)\""
VERIFY_PACKAGES_CMD="pip list | grep -E '(spacy|requests|Pillow)'"

# 项目初始化指令
INIT_COMMANDS=(
    "cd ${WORKING_DIRECTORY}"
    "python -m venv venv"
    "venv\\Scripts\\activate"
    "python -m pip install --upgrade pip"
    "pip install -r requirements.txt"
    "python -m spacy download zh_core_web_sm"
)

# 项目启动指令
START_COMMANDS=(
    "cd ${WORKING_DIRECTORY}"
    "venv\\Scripts\\activate"
    "python mainmenu_gui.py"
)

# 测试指令
TEST_COMMANDS=(
    "cd ${WORKING_DIRECTORY}"
    "venv\\Scripts\\activate"
    "python test_comment_system.py"
    "python test_sort.py"
)

# 清理指令
CLEAN_COMMANDS=(
    "cd ${WORKING_DIRECTORY}"
    "rm -rf __pycache__"
    "rm -rf .pytest_cache"
    "rm -rf *.log"
)

# 错误处理
ERROR_HANDLING=true
EXIT_ON_ERROR=true

# 日志配置
LOG_FILE="ai-sdlc.log"
LOG_ROTATION=true
LOG_MAX_SIZE="10MB"

# 提示信息
INFO_MESSAGES=(
    "🚀 AI-SDLC 项目环境配置"
    "📋 请确保在 venv 虚拟环境中运行所有命令"
    "🔧 Agent模式已启用，将在当前终端执行命令"
    "💡 主要模块: mainui.py (主界面), mainmenu_gui.py (菜单)"
)
